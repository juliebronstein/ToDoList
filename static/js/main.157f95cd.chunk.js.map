{"version":3,"sources":["img/back.jpg","components/form/FormikError.jsx","components/form/Input.jsx","components/form/CheckBox.jsx","components/form/Select.jsx","components/form/FormikControl.jsx","firebase.js","pages/Login.jsx","pages/Register.jsx","img/logo.png","img/istockphoto-1410607969-612x612.jpg","components/form/ConvertColor.jsx","components/form/Collaps.jsx","components/Task/AddButton.jsx","components/Modal.jsx","context/UserContext.js","context/TasksContext.js","components/AddCategory.jsx","components/SideBare.jsx","components/TaskCart.jsx","components/Task/Task.jsx","components/Task/AddTask.jsx","components/Main.jsx","pages/Home.jsx","components/NotLoggined.jsx","App.js","index.js"],"names":["FormikError","children","className","Input","type","name","label","placeholder","others","additionalField","id","component","Checkbox","props","formik","value","useState","checked","setCheck","handleOptionChange","e","newValue","setValues","values","form","onClick","Select","options","firstItem","handleOnchange","setForceRender","as","map","o","FormikControl","control","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","initialValues","email","password","onSubmit","actions","setErr","setLoading","navigate","signInWithEmailAndPassword","validationSchema","Yup","required","min","Login","useNavigate","err","loading","src","backPic","alth","Spinner","animation","role","size","to","displayName","createUserWithEmailAndPassword","res","updateProfile","user","setDoc","doc","uid","Register","ConvertColor","item","style","background","color","Collaps","title","open","setOpen","Collapse","in","option","catId","AddButton","ModalCenter","show","setShow","Modal","onHide","centered","Header","Title","Body","AuthContext","createContext","AuthContextProvider","currentUser","setCurrentUser","useEffect","unsub","onAuthStateChanged","console","log","Provider","TaskContext","TaskContextProvider","useContext","tasks","setTasks","categories","setCatergories","getCategoris","a","categoryRef","collection","getDocs","querySnapshot","categoryData","forEach","data","push","error","getTasks","taskRef","taskData","cate","find","c","cateId","newdata","taskId","uId","cateTitle","cateColor","addDoc","userId","newDocRef","updateDoc","prevCategories","resetForm","AddCategory","SideBar","pic","alt","signOut","TaskCart","task","Task","prevTasks","AddTask","setOptions","handleGetCategoriesOptions","p","Main","Home","NonLoggedInRoute","ProtectedRoute","App","path","element","root","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.157f95cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back.206de6a4.jpg\";","\r\nimport React from 'react';\r\n\r\nconst FormikError = ({children}) => {\r\n    return (\r\n        <small className='d-block text-danger mb-4 error_message'>{children}</small>\r\n    );\r\n}\r\n\r\nexport default FormikError;","import { ErrorMessage, FastField } from 'formik';\r\nimport React from 'react';\r\nimport FormikError from './FormikError';\r\n\r\nconst Input = ({type, name, label, className, placeholder,additionalField,...others}) => {\r\n    return (\r\n        <div id={name} className={` ${className}`}>\r\n            <div className=\"mb-3\">\r\n                {label?<span className=\"bold ms-1\"> {label} </span>:null}\r\n                <FastField type={type} name={name} className=\"form-control input\" placeholder={placeholder} {...others} />\r\n            </div>\r\n            <ErrorMessage name={name} component={FormikError}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import { ErrorMessage, FastField, Field } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport FormikError from \"./FormikError\";\r\n\r\nconst Checkbox = (props) => {\r\n  const { name, className, formik, value } = props;\r\n  const [checked, setCheck] = useState(value);\r\n  const handleOptionChange = (e) => {\r\n    const newValue = !checked;\r\n    setCheck(newValue);\r\n    formik.setValues({\r\n      ...formik.values,\r\n      [name]: newValue,\r\n    });\r\n   \r\n  };\r\n  return (\r\n<div className=\"col-2 d-flex checkcontainer\">\r\n      <div id={name} name={name} >\r\n        <FastField>\r\n          {({ form }) => {\r\n            return (\r\n              <div onClick={handleOptionChange} className=\"checkfield \">\r\n                <div className={`ring ${checked ? \"blue\" : \"waith\"}`}></div>{\" \"}\r\n              </div>\r\n            );\r\n          }}\r\n        </FastField>\r\n    </div></div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import { ErrorMessage, Field } from \"formik\";\r\nimport React from \"react\";\r\nimport FormikError from \"./FormikError\";\r\n\r\nconst Select = ({options, name, className, firstItem, handleOnchange,additionalField,setForceRender,...others\r\n}) => {\r\n\r\n    const setOptions = ()=>{\r\n        return (\r\n            <>\r\n                <option key=\"0145\" value=\"\"> {firstItem} </option>\r\n                \r\n                {options.map((o) => (\r\n                  \r\n                    <option key={o.id} value={o.id}> {o.value} </option>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n  return (\r\n        <div className={`col-12  ${className}`}>\r\n            <div className=\"input-group mb-3 dir_ltr\">\r\n                \r\n                <Field>\r\n                    {({form})=>{\r\n                        return (\r\n                            <>\r\n                                {/* {\r\n                                    handleOnchange ? (\r\n                                        <Field as=\"select\" className=\"form-control\" id={name} name={name} \r\n                                        onChange={(e)=>handleOnchange(e.target.value, form)} {...others}\r\n                                        >\r\n                                            {setOptions()}\r\n                                        </Field>\r\n                                    ) : ( */}\r\n                                        <Field as=\"select\" className=\"form-control input\" id={name} name={name}>\r\n                                            {setOptions()}\r\n                                        </Field>                                        \r\n                                {/* //     )\r\n                                // } */}\r\n                            </>\r\n                        )\r\n                    }}\r\n\r\n\r\n                    \r\n                </Field>\r\n                {additionalField?  \r\n                  <span className=\"input-group-text w_6rem justify-content-end\" \r\n                //   onClick={()=>setForceRender?setForceRender((last)=>last+1):()=>{}}\r\n                  >\r\n                    <>            \r\n                      {additionalField}\r\n                 </></span>:null}\r\n            </div>\r\n            <ErrorMessage name={name} component={FormikError}/>\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default Select;","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport Checkbox from \"./CheckBox\";\r\nimport Select from \"./Select\";\r\n\r\n\r\nconst FormikControl = (props) => {\r\n  switch (props.control) {\r\n    // case \"file\":\r\n    //   return <File {...props} />;\r\n    // case \"date\":\r\n    //   return <Date {...props} />;\r\n    case \"input\":\r\n      return <Input {...props} />;\r\n    // case \"radio\":\r\n    //   return <Radio {...props} />;\r\n    case \"select\":\r\n      return <Select {...props} />;\r\n    // case \"switch\":\r\n    //   return <Switch {...props} />;\r\n    case \"checkbox\":\r\n      return <Checkbox {...props} />;\r\n    // case \"ckeditor\":\r\n    //   return <Ckeditor {...props} />;\r\n    // case \"textarea\":\r\n    //   return <Textarea {...props} />;\r\n    // case \"inputenter\":\r\n    //   return <InputEnter {...props} />;\r\n    // case \"multiSelect\":\r\n    //   return <MultiSelect {...props} />;\r\n    // case \"filterselect\":\r\n    //   return <FilterSelect {...props} />;\r\n    // case \"searchableselect\":\r\n    //   return <SearchableSelect {...props} />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default FormikControl;","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDbADF5EnKriulnHg-YP7b7rTBYpe2rSIY\",\r\n  authDomain: \"todolist-c73ee.firebaseapp.com\",\r\n  projectId: \"todolist-c73ee\",\r\n  storageBucket: \"todolist-c73ee.appspot.com\",\r\n  messagingSenderId: \"1010620503760\",\r\n  appId: \"1:1010620503760:web:09eb371e243ce53e0670d5\"\r\n};\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth()\r\nexport const db=getFirestore()","import React, { useState } from 'react';\r\nimport {  Form, Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport backPic from \"../img/back.jpg\" ;\r\nimport FormikControl from '../components/form/FormikControl';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nimport { Spinner } from 'react-bootstrap';\r\nconst initialValues ={\r\n    email: '',\r\n    password: '',\r\n}\r\nconst onSubmit = async(values, actions,setErr,setLoading,navigate)=>{\r\nsetLoading(true)\r\n  try {\r\n    await signInWithEmailAndPassword(auth, values.email, values.password);\r\n    navigate(\"/\")\r\n  } catch (err) {\r\n    setErr(true);\r\n  }\r\n   setLoading(false)\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    email:Yup.string().required('Please fill this box').email(\"Please follow the email format, for example: aaa@example.bbb\"),\r\n    password: Yup.string().required('Please fill this box').min(6 , 'Enter at least 6 characters'),\r\n   \r\n})\r\n\r\n\r\nconst Login = () => {\r\nconst navigate=useNavigate()\r\nconst [err,setErr]=useState(false)\r\nconst [loading,setLoading]=useState(false)\r\n    return (\r\n        <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => onSubmit(values, actions,setErr,setLoading,navigate)}\r\n      >\r\n        <div className=\"col-12 d-flex flex-row image \">\r\n          <div className=\"d-none d-md-flex col-6\">\r\n            <img src={backPic} alth=\"\" className=\"col-12\" />\r\n          </div>\r\n          <div className=\"col-6 d-flex flex-column justify-content-center align-item-center\">\r\n            <h3 className=\"text-center\">Welcome To Tasker</h3>\r\n            <p >\r\n              Please insert your informations to access your tasks\r\n            </p>\r\n            <Form className=\"row col-10 d-flex justify-content-center ms-5\">\r\n             \r\n              <FormikControl\r\n                control=\"input\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                placeholder=\"insert your email\"\r\n              />\r\n              <FormikControl\r\n                control=\"input\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                placeholder=\"insert your password\"\r\n              />\r\n              <button className=\"btn submit mt-4 col-10\">\r\n                Sign In {loading&& <Spinner animation=\"border\" role=\"status\" size=\"sm\"/>}\r\n              </button>\r\n            </Form>\r\n            \r\n            {err&& <p className=\"mt-4 color-war\">Somthimg done wrog</p>}\r\n            <p className=\"mt-4\">You don't have an account? <Link to=\"/register\">Register</Link></p>\r\n          </div>\r\n        </div>\r\n      </Formik>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport backPic from \"../img/back.jpg\";\nimport { auth, db } from \"../firebase\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport FormikControl from \"../components/form/FormikControl\";\nimport { doc, setDoc } from \"firebase/firestore\";\n\n\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n};\nconst onSubmit =async (values, actions,setErr,setLoading,navigate) => {\n    setLoading(true)\n\n  const displayName=values.name\n  const email=values.email\n  try{\n      const res=await createUserWithEmailAndPassword(auth, values.email, values.password)\n      await updateProfile(res.user,{\n        displayName\n      })\n      await setDoc(doc(db,\"users\",res.user.uid),{\n        uid:res.user.uid,\n        displayName,\n        email\n      })\n\n      navigate(\"/\")\n  }catch(error){\n    setErr(true)\n  }\n setLoading(false)\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Please fill this box\"),\n  email: Yup.string()\n    .required(\"Please fill this box\")\n    .email(\"Please follow the email format, for example: aaa@example.bbb\"),\n  password: Yup.string()\n    .required(\"Please fill this box\")\n    .min(6, \"Enter at least 6 characters\"),\n});\n\nconst Register = () => {\n  const navigate=useNavigate()\n    const [err,setErr]=useState(false)\n    const [loading,setLoading]=useState(false)\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => onSubmit(values, actions,setErr,setLoading,navigate)}\n    >\n      <div className=\"col-12 d-flex flex-row image \">\n        <div className=\"d-none d-md-flex col-6\">\n          <img src={backPic} alth=\"\" className=\"col-12\" />\n        </div>\n        <div className=\"col-6 d-flex flex-column justify-content-center align-item-center\">\n          <h3 className=\"text-center\">Welcome To Tasker</h3>\n          <p >\n            Please insert your informations to access your tasks\n          </p>\n          <Form className=\"row col-10 d-flex justify-content-center ms-5\">\n            <FormikControl\n              control=\"input\"\n              type=\"text\"\n              name=\"name\"\n              label=\"Name\"\n              placeholder=\"insert your name\"\n            />\n            <FormikControl\n              control=\"input\"\n              type=\"text\"\n              name=\"email\"\n              label=\"Email\"\n              placeholder=\"insert your email\"\n            />\n            <FormikControl\n              control=\"input\"\n              type=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"insert your password\"\n            />\n            <button type=\"submit\" className=\"btn submit mt-4 col-10\">\n              Sign Up {loading&& <Spinner animation=\"border\" role=\"status\" size=\"sm\"/>}\n            </button>\n          </Form>\n          {err&& <p className=\"mt-4 color-war\">Something went wrong</p>}\n          <p className=\"mt-4\">You have an account? <Link to=\"/login\">Login</Link></p>\n        </div>\n      </div>\n    </Formik>\n  );\n};\n\nexport default Register;\n","export default __webpack_public_path__ + \"static/media/logo.7e7a1791.png\";","export default __webpack_public_path__ + \"static/media/istockphoto-1410607969-612x612.d3034005.jpg\";","import React from 'react'\r\n\r\nexport const ConvertColor = ({item,className}) => {\r\n//   const mystyle = {\r\n//     color: item.code? item.code:null,\r\n//     backgroundColor: item.code? item.code:null,\r\n//   };\r\n// style={mystyle}\r\n\r\n\r\n  return (\r\n    \r\n    <div className={className} style={{background:`${item?item:\"null\"}` ,color:`${item?item:\"null\"}`}}></div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { HiOutlineFolderMinus } from \"react-icons/hi2\";\r\nimport { BiChevronUp } from \"react-icons/bi\";\r\nimport { BiChevronDown } from \"react-icons/bi\";\r\nimport { FiFolderPlus } from \"react-icons/fi\";\r\nimport { Collapse } from \"react-bootstrap\";\r\nimport { ConvertColor } from \"./ConvertColor\";\r\n\r\nconst Collaps = ({ title, options, children }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const toggleCollapse = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`cursor-pointer border-radius-up f-sidebare  ps-3 ${open ? \"bg-darker\" : null } `}\r\n        onClick={toggleCollapse}\r\n        aria-expanded={open}\r\n      >\r\n        <span className=\"icon mt-1\">\r\n          {\" \"}\r\n          {open ? <HiOutlineFolderMinus /> : <FiFolderPlus />}\r\n        </span>\r\n        {title}\r\n        <span className=\"mt-1\">\r\n          {open ? <BiChevronUp /> : <BiChevronDown />}\r\n        </span>\r\n      </div>\r\n      <Collapse in={open} className=\"bg-darker border-radius-d ps-4 \">\r\n        <div id=\"collapse \">\r\n          {options && options?.map((option) => (\r\n            <div key={option.catId+\"_\"} className=\"d-flex flex-row\">\r\n              <ConvertColor item={option.color} className=\"d-flex color-box\" />\r\n              <div\r\n                className=\"d-flex pointer f-sidebare\"\r\n                key={option.id + \"_\" + option.title}\r\n              >\r\n                {option.title}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {children}\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Collaps;\r\n","import React from \"react\";\r\nimport {MdOutlineAddBox} from 'react-icons/md'\r\nconst AddButton = ({title,className,onClick}) => {\r\n  return (\r\n    <>\r\n      <div className={className} onClick={onClick} ><MdOutlineAddBox/> {title}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport AddButton from \"./Task/AddButton\";\r\n\r\nfunction ModalCenter({ title, children, show, setShow }) {\r\n  const handleClose = () => setShow(false);\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalCenter;\r\n","import { createContext, useEffect, useState } from \"react\";\r\n\r\n\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from \"../firebase\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    const unsub =onAuthStateChanged (auth, (user) => {\r\n      setCurrentUser(()=>{return user});\r\n      console.log(\"user:\",user);\r\n    });\r\n\r\n    return () => {\r\n      unsub();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};","// import { createContext, useContext, useEffect, useState } from \"react\";\r\n// import { auth, db } from \"../firebase\";\r\n// import { onAuthStateChanged } from \"firebase/auth\";\r\n// import { collection, getDocs } from \"firebase/firestore\";\r\n// import { AuthContext } from \"./UserContext\";\r\n\r\n// export const TaskContext = createContext();\r\n\r\n// export const TaskContextProvider = ({ children }) => {\r\n//   const { currentUser } = useContext(AuthContext);\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [categories, setCatergories] = useState([]);\r\n//   const [newTasks,setNewTasks]=useState([])\r\n//   const getCategoris = async () => {\r\n//   try {\r\n//     const categoryRef = collection(db, 'category');\r\n//     const querySnapshot = await getDocs(categoryRef);\r\n//     const categoryData = [];\r\n\r\n//     querySnapshot.forEach((doc) => {\r\n//       const data = doc.data();\r\n//       categoryData.push(data);\r\n//     });\r\n\r\n//     // Set the categories in the context once fetched\r\n//     setCatergories(categoryData);\r\n//   } catch (error) {\r\n//     console.error('Error fetching category data:', error);\r\n//     throw error;\r\n//   }\r\n// }\r\n\r\n// useEffect(() => {\r\n//   getCategoris(currentUser.uid);\r\n// }, [])\r\n  \r\n// const getTasks = async () => {\r\n//   try{\r\n//   const taskRef = collection(db, 'task');\r\n//   const querySnapshot = await getDocs(taskRef);\r\n//   const taskData = [];\r\n//   querySnapshot.forEach((doc) => {\r\n//     const data = doc.data();\r\n//     let cate= categories.find(c=>c.catId===data.cateId)\r\n//     let newdata={\r\n//       cateId: data.cateId,\r\n//       taskId: data.taskId,\r\n//       title: data.title,\r\n//       uId: data.uId,\r\n//       cateTitle: cate?.title,\r\n//       cateColor: cate?.color,\r\n//     }\r\n//     taskData.push(newdata)\r\n//   });\r\n  \r\n//   return taskData\r\n// } catch (error) {\r\n//   console.error('Error fetching task data:', error);\r\n//   throw error; // Handle the error in your component}\r\n// }}\r\n\r\n//   const setCompleteTasksData=()=>{\r\n//     // setNewTasks(tasks)\r\n//     // setTasks([])\r\n//   tasks.map(task=>{\r\n    \r\n//     let cate=categories?.find(c=>c.catId===task.cateId)\r\n//     let newtask={\r\n//       cateId: task.cateId,\r\n//       taskId: task.taskId,\r\n//       title: task.title,\r\n//       uId: task.uId,\r\n//       cateTitle: cate?.title,\r\n//       cateColor: cate?.color,\r\n//     }\r\n//    setNewTasks((old)=>{return [...old,newtask]})\r\n    \r\n//   })\r\n//   setTasks(()=>{return newTasks})\r\n//   console.log(\"newTask:===========:\",newTasks)\r\n// }\r\n\r\n//   useEffect(() => {\r\n//   const data= getTasks(currentUser.uid)\r\n//   .then((taskData) => {\r\n//     setTasks(()=>{return taskData})\r\n//   })\r\n//   .catch((error) => {\r\n//     console.error('Error:', error);\r\n//   })\r\n\r\n// //  setTimeout(() => {\r\n// //   setCompleteTasksData()\r\n// // }, \"100\");\r\n//    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <TaskContext.Provider value={{setTasks, tasks,setCatergories, categories }}>\r\n//       {children}\r\n//     </TaskContext.Provider>\r\n//   );\r\n// };\r\n\r\n\r\n\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport { AuthContext } from \"./UserContext\";\r\n\r\nexport const TaskContext = createContext();\r\n\r\nexport const TaskContextProvider = ({ children }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [categories, setCatergories] = useState([]);\r\n  const [newTasks, setNewTasks] = useState([]);\r\n\r\n  const getCategoris = async () => {\r\n    try {\r\n      const categoryRef = collection(db, 'category');\r\n      const querySnapshot = await getDocs(categoryRef);\r\n      const categoryData = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        categoryData.push(data);\r\n      });\r\n\r\n      // Set the categories in the context once fetched\r\n      setCatergories(categoryData);\r\n    } catch (error) {\r\n      console.error('Error fetching category data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategoris(currentUser.uid);\r\n  }, []);\r\n\r\n  const getTasks = async () => {\r\n    try {\r\n      const taskRef = collection(db, 'task');\r\n      const querySnapshot = await getDocs(taskRef);\r\n      const taskData = [];\r\n      \r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        let cate = categories.find(c => c.catId === data.cateId);\r\n        let newdata = {\r\n          cateId: data.cateId,\r\n          taskId: data.taskId,\r\n          title: data.title,\r\n          uId: data.uId,\r\n          cateTitle: cate?.title,\r\n          cateColor: cate?.color,\r\n        }\r\n        taskData.push(newdata);\r\n      });\r\n      \r\n      // Set tasks here after fetching and processing data\r\n      setTasks(taskData);\r\n    } catch (error) {\r\n      console.error('Error fetching task data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Use a useEffect to watch the categories state\r\n  useEffect(() => {\r\n    // Call the function to set tasks when categories change\r\n    getTasks();\r\n  }, [categories]);\r\n\r\n  // ...\r\n\r\n  return (\r\n    <TaskContext.Provider value={{ setTasks, tasks, setCatergories, categories }}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"../components/form/FormikControl\";\r\nimport ModalCenter from \"./Modal\";\r\nimport AddButton from \"./Task/AddButton\";\r\nimport { AuthContext } from \"../context/UserContext\";\r\nimport { TaskContext } from \"../context/TasksContext\";\r\nimport { addDoc, collection, doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst initialValues = {\r\n  title: \"\",\r\n  color: \"\",\r\n};\r\nconst onSubmit = async (values, actions, setErr, setLoading,setShow,uid,setCatergories) => {\r\n  setLoading(true)\r\n  const title=values.title\r\n  const color=values.color\r\n  try {\r\n    const categoryRef = collection(db, 'category');\r\n    const newDocRef = await addDoc(categoryRef, {\r\n      userId: uid,\r\n      title: title,\r\n      color: color,\r\n    });\r\n    await updateDoc(newDocRef, {\r\n      catId: newDocRef.id,\r\n      userId: uid,\r\n      title: title,\r\n      color: color,\r\n    });\r\n    setCatergories((prevCategories) => {\r\n      return [\r\n        ...prevCategories,\r\n        {\r\n          catId:newDocRef.id,\r\n          userId: uid,\r\n          title: title,\r\n          color: color,\r\n        }\r\n      ];\r\n    });\r\n  } catch (error) {\r\n    console.error('Error adding document: ', error);\r\n    setErr(true)\r\n    throw error; \r\n  }\r\nactions.resetForm()\r\n\r\n\r\n\r\n  setShow(false)\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  title: Yup.string()\r\n    .required(\"Please fill this box\")\r\n    .min(2, \"Enter at least 2 characters\"),\r\n  color: Yup.string().required(\"Please fill this box\"),\r\n});\r\n\r\nconst AddCategory = ({className}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const {setCatergories}=useContext(TaskContext)\r\n  const [show, setShow] = useState(false);\r\n  const [err, setErr] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  return (\r\n    <>\r\n      <AddButton\r\n        onClick={() => setShow(true)}\r\n        title=\"Add new\"\r\n        className={`pointer add-cate  ${className}`}\r\n      />\r\n      <ModalCenter title=\"Add Category\" show={show} setShow={setShow}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, actions) =>\r\n            onSubmit(values, actions, setErr, setLoading,setShow ,currentUser.uid,setCatergories)\r\n          }\r\n        >\r\n              <Form className=\"row col-10 d-flex justify-content-center ms-5\">\r\n                <FormikControl\r\n                  control=\"input\"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  placeholder=\"insert category title\"\r\n                />\r\n                <FormikControl\r\n                  control=\"input\"\r\n                  type=\"color\"\r\n                  name=\"color\"\r\n                />\r\n                <button type=\"submit\" className=\"btn submit mt-4 col-10 color-white\">Add {loading&& <Spinner animation=\"border\" role=\"status\" size=\"sm\"/>}</button>\r\n              </Form>\r\n           \r\n        </Formik>\r\n        {err&&<span className=\"color-war\">Somthings done wrong </span>}\r\n      </ModalCenter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { signOut } from \"firebase/auth\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { MdLogout } from \"react-icons/md\";\r\nimport { IoSettingsOutline } from \"react-icons/io5\";\r\nimport { BsClipboard2Check } from \"react-icons/bs\";\r\nimport picture from \"../img/istockphoto-1410607969-612x612.jpg\";\r\nimport pic from \"../img/logo.png\";\r\nimport Collaps from \"./form/Collaps\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport { AuthContext } from \"../context/UserContext\";\r\nimport { collection, doc, getDoc, getDocs, onSnapshot } from \"firebase/firestore\";\r\nimport { TaskContext } from \"../context/TasksContext\";\r\nimport { date } from \"yup\";\r\n\r\nconst SideBar = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  // const { setCatergories, categories } = useContext(TaskContext);\r\n  // const getCategoris = async () => {\r\n  //   try{\r\n  //     const categoryRef = collection(db, 'category');\r\n  //   const querySnapshot = await getDocs(categoryRef);\r\n  //   const categoryData = [];\r\n\r\n  //   querySnapshot.forEach((doc) => {\r\n  //     const data = doc.data();\r\n  //     categoryData.push(data);\r\n  //   });\r\n  //   return categoryData\r\n  // } catch (error) {\r\n  //   console.error('Error fetching category data:', error);\r\n  //   throw error; // Handle the error in your component}\r\n  // }}\r\n \r\n  //   useEffect(() => {\r\n  //   const data= getCategoris(currentUser.uid)\r\n  //   .then((categoryData) => {\r\n  //     setCatergories(()=>{return categoryData})\r\n  //     // return categoryData\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.error('Error:', error);\r\n  //   })\r\n  //     }, []);\r\n\r\n\r\n  const { setCatergories, categories } = useContext(TaskContext);\r\n  // const getCategoris = async () => {\r\n  //   try {\r\n  //     const categoryRef = collection(db, 'category');\r\n  //     const querySnapshot = await getDocs(categoryRef);\r\n  //     const categoryData = [];\r\n  \r\n  //     querySnapshot.forEach((doc) => {\r\n  //       const data = doc.data();\r\n  //       categoryData.push(data);\r\n  //     });\r\n  \r\n  //     // Set the categories in the context once fetched\r\n  //     setCatergories(categoryData);\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching category data:', error);\r\n  //     throw error;\r\n  //   }\r\n  // }\r\n  \r\n  // useEffect(() => {\r\n  //   getCategoris(currentUser.uid);\r\n  // }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"d-none d-md-flex col-2 sidebare \">\r\n      <img className=\"col-6\" src={pic} alt=\"\" />\r\n      <div className=\"d-flex flex-column sid-content col-9\">\r\n        <div className=\"cursor-pointer mb-1 ps-3 f-sidebare\">\r\n          <BsClipboard2Check className=\"icon\" />\r\n          Task\r\n        </div>\r\n        <Collaps title=\"Categories\" options={categories}>\r\n          <AddCategory className=\"col-10 text-center mt-2 add\" />\r\n        </Collaps>\r\n        <div className=\"cursor-pointer mt-1 ps-3 f-sidebare\">\r\n          <IoSettingsOutline className=\"icon\" />\r\n          Setting\r\n        </div>\r\n      </div>\r\n      <span\r\n        className=\"logout ps-3\"\r\n        onClick={() => {\r\n          signOut(auth);\r\n        }}\r\n      >\r\n        {\" \"}\r\n        Logout <MdLogout className=\"CiLogout\" />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport {MdDelete} from 'react-icons/md'\r\nimport {MdModeEdit} from 'react-icons/md'\r\nimport { ConvertColor } from './form/ConvertColor';\r\n\r\nconst TaskCart = ({task,className}) => {\r\n// console.log(\"task in taskcard\",task)\r\n    return (\r\n        <div className={`${className} task-cart`}>\r\n          \r\n        <div className=\"col-8 d-flex flex-column\">\r\n          <div className=\"d-flex fs-4-\">{task.title}</div>\r\n          <div className=\"d-flex \"><ConvertColor className=\"d-flex color-box\"  item={task.cateColor} /> {task.cateTitle}</div>\r\n        </div>\r\n        <div className=\"d-flex flex-row icon col-4 justify-content-end fs-3\">\r\n          <MdModeEdit className=\"col-2\"/>\r\n          <MdDelete className=\"col-2\"/>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskCart;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport FormikControl from \"../form/FormikControl\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport TaskCart from \"../TaskCart\";\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n  };\r\n  const onSubmit = async (values, actions) => {\r\n    \r\n  };\r\n\r\nconst Task = ({tasks}) => {\r\n\r\n  // const {categories,setTasks}=useContext(TaskContext)\r\n\r\n\r\n  const validationSchema = Yup.object({\r\n    // email: Yup.string()\r\n    //   .required(\"Please fill this box\")\r\n    //   .email(\"Please follow the email format, for example: aaa@example.bbb\"),\r\n  });\r\n  return (\r\n    <div className=\"task col-10 \">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => onSubmit(values, actions)}\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <Form className=\"col-12 d-flex flex-column\">\r\n              \r\n              {tasks.map((task)=>(\r\n             <div key={task.taskId+\"==\"} className=\"d-flex flex-row mb-2\">\r\n              <FormikControl className=\"col-2\" control=\"checkbox\" name=\"email\" formik={formik} value={true} />\r\n                <TaskCart className=\"col-10\" key={\"index_\"+task.taskId+\"id\"} task={task}/>\r\n             </div>\r\n              )) }\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","// {/*  */}\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// import AddButton from './AddButton';\r\n\r\n// const AddTask = () => {\r\n\r\n//     return (\r\n//       <>\r\n//       <AddButton\r\n//         onClick={() => setShow(true)}\r\n//         title=\"Add a task\"\r\n//         className=\"col-10 text-center mt-2 pointer add\"\r\n//       />\r\n//       </>\r\n//     );\r\n// }\r\n\r\n// export default AddTask;\r\n\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { AuthContext } from \"../../context/UserContext\";\r\nimport AddButton from \"./AddButton\";\r\nimport ModalCenter from \"../Modal\";\r\nimport FormikControl from \"../form/FormikControl\";\r\nimport { TaskContext } from \"../../context/TasksContext\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport AddCategory from \"../AddCategory\";\r\nimport { addDoc, collection, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\n\r\nconst initialValues = {\r\n taskId:\"\",\r\n title: \"\",\r\n cateId: \"\",\r\n uId:\"\"\r\n};\r\nconst onSubmit = async (values, actions, setErr, setLoading,setShow,setTasks,uid) => {\r\n    setLoading(true)\r\n    console.log(\"values in add task:\",values)\r\n    const title=values.title\r\n    const cateId=values.cateId\r\n    try {\r\n      const categoryRef = collection(db, 'task');\r\n      const newDocRef = await addDoc(categoryRef, {\r\n        title: title,\r\n        cateId: cateId,\r\n        uId:uid\r\n      });\r\n      await updateDoc(newDocRef, {\r\n        taskId: newDocRef.id,\r\n        title: title,\r\n        cateId: cateId,\r\n        uId:uid\r\n      });\r\n      setTasks((prevTasks) => {\r\n        return [\r\n          ...prevTasks,\r\n          {\r\n            taskId:newDocRef.id,\r\n            title: title,\r\n            cateId: cateId,\r\n            uId:uid\r\n          }\r\n        ];\r\n      });\r\n      // setForceRender(last=>last+1)\r\n    } catch (error) {\r\n      console.error('Error adding document: ', error);\r\n      setErr(true)\r\n      throw error; \r\n    }\r\n  \r\n  actions.resetForm()\r\n\r\n    setShow(false)\r\n  };\r\n\r\nconst validationSchema = Yup.object({\r\n  title: Yup.string()\r\n    .required(\"Please fill this box\")\r\n    .min(3, \"Enter at least 3 characters\"),\r\n    cateId:Yup.string().required(\"Please fill this box\")\r\n});\r\n\r\nconst AddTask = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const {categories,setTasks}=useContext(TaskContext)\r\n  const [show, setShow] = useState(false);\r\n  const [err, setErr] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [options,setOptions]=useState([])\r\n  const handleGetCategoriesOptions = async () => {\r\n    try {\r\n        setOptions(\r\n          categories.map((p) => {\r\n            return { id: p.catId, value: p.title };\r\n          }))\r\n    } catch (error) {\r\n     \r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleGetCategoriesOptions();\r\n  }, [categories]);\r\n\r\n  return (\r\n    <>\r\n      <AddButton\r\n        onClick={() => setShow(true)}\r\n        title=\"Add new\"\r\n        className=\"col-10 text-center mt-2 pointer add-cate add\"\r\n      />\r\n      <ModalCenter title=\"Add Task\" show={show} setShow={setShow}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, actions) =>\r\n            onSubmit(values, actions, setErr, setLoading,setShow,setTasks,currentUser.uid)\r\n          }\r\n        >\r\n             \r\n              <Form className=\"row col-10 d-flex justify-content-center ms-5\">\r\n\r\n              <FormikControl\r\n                    control=\"select\"\r\n                    options={options}\r\n                    name=\"cateId\"\r\n                    firstItem=\"please choice category\"\r\n                    additionalField={<AddCategory/>}\r\n                    />\r\n                <FormikControl\r\n                  control=\"input\"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  placeholder=\"insert category title\"\r\n                />\r\n                <button type=\"submit\" className=\"btn submit mt-4 col-10 color-white\">Add {loading&& <Spinner animation=\"border\" role=\"status\" size=\"sm\"/>}</button>\r\n              </Form>\r\n           \r\n        </Formik>\r\n        {err&&<span className=\"color-war\">Somthings done wrong </span>}\r\n      </ModalCenter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport Task from './Task/Task';\r\nimport {VscFilterFilled} from 'react-icons/vsc';\r\nimport AddButton from './Task/AddButton';\r\nimport AddTask from './Task/AddTask';\r\nimport { TaskContext } from '../context/TasksContext';\r\nimport { AuthContext } from '../context/UserContext';\r\nimport { collection, doc, getDoc, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst Main = () => {\r\n\r\nconst { currentUser } = useContext(AuthContext);\r\nconst {categories, setTasks, tasks } = useContext(TaskContext);\r\n// const [newTasks,setNewTasks]=useState([])\r\n// const [forceRender,setForceRender]=useState(0)\r\n// const getTasks = async () => {\r\n//   console.log(\"categories\",categories)\r\n//   try{\r\n//     const taskRef = collection(db, 'task');\r\n//   const querySnapshot = await getDocs(taskRef);\r\n//   const taskData = [];\r\n//   querySnapshot.forEach((doc) => {\r\n//     const data = doc.data();\r\n//     let cate= categories.find(c=>c.catId===data.cateId)\r\n//     let newdata={\r\n//       cateId: data.cateId,\r\n//       taskId: data.taskId,\r\n//       title: data.title,\r\n//       uId: data.uId,\r\n//       cateTitle: cate?.title,\r\n//       cateColor: cate?.color,\r\n//     }\r\n//     taskData.push(newdata)\r\n//   });\r\n  \r\n//   return taskData\r\n// } catch (error) {\r\n//   console.error('Error fetching task data:', error);\r\n//   throw error; // Handle the error in your component}\r\n// }}\r\n\r\n//   const setCompleteTasksData=()=>{\r\n//     // setNewTasks(tasks)\r\n//     // setTasks([])\r\n//   tasks.map(task=>{\r\n    \r\n//     let cate=categories?.find(c=>c.catId===task.cateId)\r\n//     let newtask={\r\n//       cateId: task.cateId,\r\n//       taskId: task.taskId,\r\n//       title: task.title,\r\n//       uId: task.uId,\r\n//       cateTitle: cate?.title,\r\n//       cateColor: cate?.color,\r\n//     }\r\n//    setNewTasks((old)=>{return [...old,newtask]})\r\n    \r\n//   })\r\n//   setTasks(()=>{return newTasks})\r\n//   console.log(\"newTask:===========:\",newTasks)\r\n// }\r\n\r\n//   useEffect(() => {\r\n//   const data= getTasks(currentUser.uid)\r\n//   .then((taskData) => {\r\n//     setTasks(()=>{return taskData})\r\n//   })\r\n//   .catch((error) => {\r\n//     console.error('Error:', error);\r\n//   })\r\n\r\n//  setTimeout(() => {\r\n//   setCompleteTasksData()\r\n// }, \"100\");\r\n//    }, []);\r\n\r\n\r\n \r\n\r\n    return (\r\n      <>\r\n        <div className='col-12 col-md-10 pt-5 pt-md-0 main d-flex flex-column align-item-center'>\r\n          <div className='col-10 d-flex justify-content-between align-item-center ps-2' >\r\n            <div className='d-none col-6 d-md-flex fs-4'>Tasks</div>\r\n            <div className='d-flex flex-row justify-md-content-center align-item-center col-10 col-md-4'>\r\n              <button className='chips col-3'>All</button>\r\n              <button className='chips col-3'>Done</button>\r\n              <button className='chips col-5 col-md-3'>Not Done</button>\r\n              <button className='chips col-3 col-md-2'><VscFilterFilled/></button>             \r\n            </div>\r\n          </div>\r\n            <Task tasks={tasks}/>\r\n            <AddTask  />        \r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport SideBar from '../components/SideBare';\r\nimport Main from '../components/Main';\r\nimport { TaskContext } from '../context/TasksContext';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { AuthContext } from '../context/UserContext';\r\nconst Home = () => {\r\n\r\n\r\n    return (\r\n      <div className='col-12 d-flex flex-row'>\r\n      <SideBar/>\r\n      <Main/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","\r\nimport React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/UserContext\";\r\nimport { Navigate } from \"react-router-dom\";\r\nexport const NonLoggedInRoute = ({ children }) => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser) {\r\n      return <Navigate to=\"/\" />;\r\n    } else {\r\n      return children;\r\n    }\r\n  };\r\n  export const ProtectedRoute = ({ children }) => {\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    if (!currentUser) {\r\n      return <Navigate to=\"/login\" />;\r\n    } else {\r\n      return children;\r\n    }\r\n  };","import React from 'react';\n\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Home from './pages/Home';\nimport {NonLoggedInRoute, ProtectedRoute} from './components/NotLoggined';\n\nconst App = ()=>{\n    return (\n        <BrowserRouter>\n        <Routes>\n          <Route path='/login' element={<NonLoggedInRoute><Login /></NonLoggedInRoute>} />\n          <Route path='/' element={<ProtectedRoute><Home /></ProtectedRoute>} />\n          <Route path='/register' element={<NonLoggedInRoute><Register /></NonLoggedInRoute>} />\n          <Route path='*' element={<NonLoggedInRoute><Login /></NonLoggedInRoute>} />\n          \n        </Routes>\n        </BrowserRouter>\n    ) \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport { AuthContextProvider } from './context/UserContext';\nimport { TaskContextProvider } from './context/TasksContext';\n\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <AuthContextProvider>\n     <TaskContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    </TaskContextProvider>\n  </AuthContextProvider>\n  ,root\n);\n\n\n\n"],"sourceRoot":""}